{"ast":null,"code":"import _slicedToArray from\"/Users/graj/projects/Random-Quote-Machine-Reactjs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';export default(function(initialState){var _useState=useState(initialState),_useState2=_slicedToArray(_useState,2),quotes=_useState2[0],setQuotes=_useState2[1];var _useState3=useState(initialState),_useState4=_slicedToArray(_useState3,2),updateQuotes=_useState4[0],upQuotes=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),errorMessage=_useState6[0],setErrorMessage=_useState6[1];useEffect(function(){fetch(\"https://type.fit/api/quotes\").then(function(response){return response.json();}).then(function(jsonResponse){return setQuotes(jsonResponse);}).catch(function(err){return setErrorMessage(err);});},[]);return{updateQuotes:updateQuotes,save:function save(){upQuotes(quotes[Math.floor(Math.random()*quotes.length)]);},errorMessage:errorMessage};});","map":{"version":3,"sources":["/Users/graj/projects/Random-Quote-Machine-Reactjs/src/components/usetoState.js"],"names":["useState","useEffect","initialState","quotes","setQuotes","updateQuotes","upQuotes","errorMessage","setErrorMessage","fetch","then","response","json","jsonResponse","catch","err","save","Math","floor","random","length"],"mappings":"wKAAA,OAAQA,QAAR,CAAiBC,SAAjB,KAAiC,OAAjC,CAEA,eAAe,SAACC,YAAD,CAAkB,eAENF,QAAQ,CAACE,YAAD,CAFF,wCAE1BC,MAF0B,eAEnBC,SAFmB,8BAIDJ,QAAQ,CAACE,YAAD,CAJP,yCAI1BG,YAJ0B,eAIbC,QAJa,8BAMMN,QAAQ,CAAC,EAAD,CANd,yCAM1BO,YAN0B,eAMbC,eANa,eAQ/BP,SAAS,CAAC,UAAI,CACZQ,KAAK,CAAC,6BAAD,CAAL,CACCC,IADD,CACM,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,EAAJ,EADd,EAECF,IAFD,CAEM,SAAAG,YAAY,QAAIT,CAAAA,SAAS,CAACS,YAAD,CAAb,EAFlB,EAGCC,KAHD,CAGO,SAAAC,GAAG,QAAIP,CAAAA,eAAe,CAACO,GAAD,CAAnB,EAHV,EAID,CALQ,CAKP,EALO,CAAT,CAOA,MAAO,CACLV,YAAY,CAAZA,YADK,CAELW,IAAI,CAAG,eAAM,CACRV,QAAQ,CAACH,MAAM,CAACc,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAchB,MAAM,CAACiB,MAAhC,CAAD,CAAP,CAAR,CACJ,CAJI,CAKLb,YAAY,CAAZA,YALK,CAAP,CAOD,CAtBD","sourcesContent":["import {useState,useEffect} from 'react';\n\nexport default (initialState) => {\n\nconst [quotes,setQuotes] = useState(initialState);\n\nconst [updateQuotes,upQuotes] = useState(initialState)\n\nconst [errorMessage,setErrorMessage] = useState(\"\");\n  \n  useEffect(()=>{\n    fetch(\"https://type.fit/api/quotes\")\n    .then(response => response.json())\n    .then(jsonResponse => setQuotes(jsonResponse))\n    .catch(err => setErrorMessage(err));\n  },[])\n \n  return {\n    updateQuotes,\n    save : () => {\n         upQuotes(quotes[Math.floor(Math.random()*quotes.length)]);\n    },\n    errorMessage\n  };\n}"]},"metadata":{},"sourceType":"module"}