{"ast":null,"code":"import { useState } from 'react';\nexport default (initialState => {\n  const [quotes, setQuotes] = useState(initialState);\n  const [updateQuotes, upQuotes] = useState(initialState);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  useEffect(() => {\n    fetch(\"https://type.fit/api/quotes\").then(response => response.json()).then(jsonResponse => setQuotes(jsonResponse)).catch(err => setErrorMessage(err));\n  }, []);\n  return {\n    updateQuotes,\n    save: () => {\n      upQuotes(quotes[Math.floor(Math.random() * quotes.length)]);\n    },\n    errorMessage\n  };\n});","map":{"version":3,"sources":["/Users/graj/projects/random-quote/src/components/usetoState.js"],"names":["useState","initialState","quotes","setQuotes","updateQuotes","upQuotes","errorMessage","setErrorMessage","useEffect","fetch","then","response","json","jsonResponse","catch","err","save","Math","floor","random","length"],"mappings":"AAAA,SAAQA,QAAR,QAAuB,OAAvB;AAEA,gBAAgBC,YAAD,IAAkB;AAEjC,QAAM,CAACC,MAAD,EAAQC,SAAR,IAAqBH,QAAQ,CAACC,YAAD,CAAnC;AAEA,QAAM,CAACG,YAAD,EAAcC,QAAd,IAA0BL,QAAQ,CAACC,YAAD,CAAxC;AAEE,QAAM,CAACK,YAAD,EAAcC,eAAd,IAAiCP,QAAQ,CAAC,EAAD,CAA/C;AAEAQ,EAAAA,SAAS,CAAC,MAAI;AACZC,IAAAA,KAAK,CAAC,6BAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,YAAY,IAAIV,SAAS,CAACU,YAAD,CAF/B,EAGCC,KAHD,CAGOC,GAAG,IAAIR,eAAe,CAACQ,GAAD,CAH7B;AAID,GALQ,EAKP,EALO,CAAT;AAOA,SAAO;AACLX,IAAAA,YADK;AAELY,IAAAA,IAAI,EAAG,MAAM;AACRX,MAAAA,QAAQ,CAACH,MAAM,CAACe,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAcjB,MAAM,CAACkB,MAAhC,CAAD,CAAP,CAAR;AACJ,KAJI;AAKLd,IAAAA;AALK,GAAP;AAOD,CAtBD","sourcesContent":["import {useState} from 'react';\n\nexport default (initialState) => {\n\nconst [quotes,setQuotes] = useState(initialState);\n\nconst [updateQuotes,upQuotes] = useState(initialState)\n\n  const [errorMessage,setErrorMessage] = useState(\"\");\n  \n  useEffect(()=>{\n    fetch(\"https://type.fit/api/quotes\")\n    .then(response => response.json())\n    .then(jsonResponse => setQuotes(jsonResponse))\n    .catch(err => setErrorMessage(err));\n  },[])\n \n  return {\n    updateQuotes,\n    save : () => {\n         upQuotes(quotes[Math.floor(Math.random()*quotes.length)]);\n    },\n    errorMessage\n  };\n}"]},"metadata":{},"sourceType":"module"}